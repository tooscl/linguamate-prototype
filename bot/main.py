import asyncio
import logging
import os
from aiogram import Bot, Dispatcher
from aiogram.types import BotCommand
from bot.config import TOKEN
from bot.handlers import start, help, restart, feedback, echo

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher()

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
async def register_handlers():
    dp.include_router(start.router)
    dp.include_router(help.router)
    dp.include_router(restart.router)
    dp.include_router(feedback.router)
    dp.include_router(echo.router)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –º–µ–Ω—é
async def set_commands(bot: Bot):
    commands = [
        BotCommand(command="/start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand(command="/help", description="–ü–æ–º–æ—â—å"),
        BotCommand(command="/restart", description="–ù–∞—á–∞—Ç—å –≤—Å–µ –∑–∞–Ω–æ–≤–æ"),
        BotCommand(command="/feeedback", description="–û—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—åüòä")
    ]
    await bot.set_my_commands(commands)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await register_handlers()
    await set_commands(bot)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
